#include<Wire.h>
#include<SPI.h>
#include<Adafruit_GFX.h>
#include<Adafruit_SSD1306.h>

#define OLED_MOSI 11//D1
#define OLED_CLK 12//D0
#define OLED_DC 9//DC
#define OLED_CS 8//CS
#define OLED_RESET 10//res
#define Light_PIN A0

Adafruit_SSD1306 display(OLED_MOSI,OLED_CLK,OLED_DC,OLED_RESET,OLED_CS);

static const unsigned char PROGMEM Logo[]={
0xff,0xff,0xff,0xff,0xff,0xef,0xff,0xff,
  0xff,0xff,0x9f,0xff,0xff,0xc7,0xff,0xff,
  0xff,0xff,0x8f,0xff,0xff,0x87,0xff,0xff,
  0xff,0xff,0x23,0xff,0xfe,0x67,0xff,0xff,
  0xff,0xff,0x39,0xff,0xfc,0xf7,0xff,0xff,
  0xff,0xff,0x3c,0x60,0x01,0xf3,0xff,0xff,
  0xff,0xff,0x30,0x7f,0xfc,0x03,0xff,0xff,
  0xff,0xff,0x1f,0xff,0xff,0xf0,0xff,0xff,
  0xff,0xf8,0xff,0xff,0xff,0xff,0x1f,0xff,
  0xff,0xe7,0xff,0xff,0xff,0xff,0xe7,0xff,
  0xff,0x9f,0xf9,0xff,0xe3,0xff,0xf9,0xff,
  0xfe,0x7f,0xf1,0xff,0xe3,0xff,0xfc,0x7f,
  0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0x3f,
  0xf9,0xff,0xff,0x99,0xff,0xff,0xff,0x9f,
  0xf3,0xff,0xf7,0xc3,0xff,0xff,0xff,0x9f,
  0xf3,0xff,0xf3,0xc7,0xef,0xff,0xff,0xcf,
  0xf3,0xff,0xf8,0x31,0xcf,0xff,0xff,0xcf,
  0xf7,0xff,0xfe,0x7c,0x3f,0xff,0xff,0xcf,
  0xf3,0xff,0xff,0x3c,0xff,0xff,0xff,0xcf,
  0xf3,0xff,0xff,0x99,0xff,0xff,0xff,0xcf,
  0xfb,0xff,0xff,0xe3,0xff,0xff,0xff,0x9f,
  0xf9,0xff,0xff,0xff,0xff,0xff,0xff,0x3f,
  0xfc,0xff,0xff,0xff,0xff,0xff,0xfe,0x7f,
  0xfe,0x3f,0xff,0xff,0xff,0xff,0xfc,0xff,
  0xff,0x9f,0xff,0xff,0xff,0xff,0xf1,0xff,
  0xff,0xe3,0xff,0xff,0xff,0xff,0xc7,0xff,
  0xff,0xf8,0xff,0xff,0xff,0xfe,0x3f,0xff,
  0xff,0xfc,0x0f,0xff,0xff,0xf1,0x3f,0xff,
  0xff,0xfc,0xe0,0x1f,0xf8,0x07,0xbf,0xff,
  0xff,0xfc,0x82,0x7f,0xfc,0xc3,0xbf,0xff,
  0xff,0xf8,0x00,0x00,0x00,0x01,0x1f,0xff,
  0xff,0x80,0x00,0x00,0x00,0x00,0x00,0x3f,
};

static const unsigned char PROGMEM Logo1[]={
 0xff,0xff,0xff,0xff,0xff,0xf7,0xff,0xff,
 0xff,0xff,0x9f,0xff,0xff,0xc3,0xff,0xff,
  0xff,0xff,0x0f,0xff,0xff,0x93,0xff,0xff,
  0xff,0xff,0x23,0xff,0xff,0x33,0xff,0xff,
  0xff,0xff,0x39,0xff,0xfc,0x73,0xff,0xff,
  0xff,0xff,0x3c,0x00,0x00,0xf3,0xff,0xff,
  0xff,0xff,0x30,0x7f,0xfe,0x01,0xff,0xff,
  0xff,0xfe,0x1f,0xff,0xff,0xf8,0x7f,0xff,
  0xff,0xf8,0xff,0xff,0xff,0xff,0x87,0xff,
  0xff,0x87,0xff,0xff,0xff,0xff,0xf3,0xff,
  0xff,0x3f,0xc1,0xff,0xe1,0xff,0xfc,0xff,
  0xfe,0x7f,0xcc,0xff,0xec,0xff,0xfe,0x3f,
  0xfc,0xff,0xff,0xff,0xfb,0xff,0xff,0x9f,
  0xf9,0xff,0xff,0x9c,0xff,0xff,0xff,0xcf,
  0xf3,0xff,0xff,0x81,0xff,0xff,0xfe,0xc7,
  0xe7,0xff,0xf3,0xc3,0xe7,0xff,0xff,0xc7,
  0xe5,0xff,0xf8,0x11,0xcf,0xff,0xff,0x87,
  0xe7,0xff,0xff,0x3c,0x1f,0xff,0xff,0x87,
  0xe1,0x7f,0xff,0x3e,0x7f,0xff,0xff,0x87,
  0xe0,0xff,0xff,0x7e,0x7f,0xff,0xfd,0x07,
  0xf0,0x1f,0xbe,0x7f,0x7f,0xff,0xfe,0x0f,
  0xf0,0x3f,0xfe,0x00,0x7f,0xff,0xf4,0x0f,
  0xf8,0x03,0xff,0xff,0xff,0xff,0xe0,0x1f,
  0xfc,0x01,0x7f,0xff,0xff,0xd8,0xc0,0x3f,
  0xff,0x00,0x6f,0xff,0xfb,0x3c,0x80,0x7f,
  0xff,0xc0,0x0f,0x5e,0xbb,0xa0,0x01,0xff,
  0xff,0xe0,0x00,0x82,0x18,0x00,0x07,0xff,
  0xff,0xfc,0x00,0x00,0x00,0x00,0x1f,0xff,
  0xff,0xfc,0x00,0x00,0x00,0x00,0x1f,0xff,
  0xff,0xfc,0x00,0x00,0x00,0x00,0x1f,0xff,
  0xff,0xfc,0x10,0x7f,0xfe,0x00,0x1f,0xff,
  0xff,0xfc,0xfc,0xff,0xff,0x9e,0x1f,0xff,
};

void draw(){
  int light=analogRead(Light_PIN);
  if(light<100){
    display.clearDisplay();
    display.drawBitmap(20,0,Logo1,64,32,WHITE);
    display.setTextColor(WHITE);
    display.setTextSize(1); 
    display.setCursor(96,20);
    display.print("Hard!");
    display.display();
    }
   else{
    display.clearDisplay();
    display.drawBitmap(20,0,Logo,64,32,WHITE);   
    display.setTextColor(WHITE);
    display.setTextSize(1); 
    display.setCursor(96,20);
    display.print("Easy...");
    display.display();  
   }
}
void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  pinMode(Light_PIN,INPUT);
  display.begin(SSD1306_SWITCHCAPVCC);
  display.clearDisplay();
  display.drawBitmap(32,0,Logo,64,32,WHITE);
  display.display();
}

void loop() {
  draw();
}
